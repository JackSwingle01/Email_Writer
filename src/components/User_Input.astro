---
// ASTRO STUFF HERE:
import Clear_Button from "./Clear_Button.astro";
---
<!--THIS IS LOGIN STUFF-->
<script>
window.addEventListener("DOMContentLoaded", function() {
    var username = "";
    var password = "";
    var popup = document.createElement("div");
    popup.id = "login-popup";
    popup.innerHTML = `
        <div class="popup-content" style="background-color: white; padding: 20px;">
            <h3>Please enter your username and password</h3>
            <label for="username">Username:</label>
            <input type="text" id="username-input"><br><br>
            <label for="password">Password:</label>
            <input type="password" id="password-input"><br><br>
            <button id="submit-login">Submit</button>
        </div>
    `;
    document.body.appendChild(popup);

    var popupContent = document.querySelector("#login-popup .popup-content");
    popupContent.style.position = "absolute";
    popupContent.style.left = "50%";
    popupContent.style.top = "40%";
    popupContent.style.transform = "translate(-50%, -50%)";
    
    var submitButton = document.querySelector("#submit-login");
    var usernameInput = document.querySelector("#username-input");
    var passwordInput = document.querySelector("#password-input");
    
    submitButton.addEventListener("click", function() {
        username = usernameInput.value;
        password = passwordInput.value;
        tempLogin(username, password);
    });
});

function tempLogin(username, password) {
    if (username === "admin" && password === "admin") {
        document.querySelector("#login-popup").style.display = "none";
    } else {
        alert("ERROR: Invalid username or password");
        document.querySelector("#username-input").value = "";
        document.querySelector("#password-input").value = "";
    }
}
</script>

<!--HTML HERE -->
	<div id="options_div">
    <div>
        <p>
            Who is the email being sent from: <br /><input
                type="text"
                id="sender"
            />
        </p>
    </div>

    <div>
        <p>
            Who is the email being sent to: <br /><input
                type="text"
                id="recipient"
            />
        </p>
    </div>

    <div>
        <p>
            What is the topic/purpose of the email: <br /><textarea
                type="text"
                id="purpose"></textarea>
        </p>
    </div>

    <div class="form-group row">
        <label>What should the approximate length be:</label>
        <select class="form-control" asp-for="WillAttend" id="Attend">
            <option value="">Please select a length</option>
            <option value="Short">Short</option>
            <option value="Medium">Medium</option>
            <option value="Long">Long</option>
        </select>
    </div>

    <div class="form-group row">
        <p>
            <label>What should the tone of the email be:</label>
            <select class="form-control" asp-for="Tones" id="Tone">
                <option value="">Please select a length</option>
                <option value="Friendly">Friendly</option>
                <option value="Professional">Professional</option>
                <option value="Conversational">Conversational</option>
            </select>
        </p>
    </div>

    <button id="generate">Generate</button>
    <Clear_Button />
</div>
<!-- JAVASCRIPT HERE -->
<script>
    var auth_header;

    var sender = document.getElementById("sender");
    var recipient = document.getElementById("recipient");
    var purpose = document.getElementById("purpose");
    var length = document.getElementById("Attend");
    var tone = document.getElementById("Tone");

    var button = document.getElementById("generate");
    var output = document.getElementById("Output_Field");

    button.addEventListener("click", async function () {
        let prompt = constructPrompt();
        output.textContent = "Generating...";

        await login("admin", "admin").then((auth) => {
            auth_header = auth;
        });
        // make a get request to localhost3100
        await getCompletion(prompt, getMaxTokenCount(length.value)).then(
            (email) => {
                email.text().then((text) => {
                    console.log(text);
                    output.textContent = text;
                });
            }
        );
    });

    function constructPrompt() {
        let prompt = "Write a";
        prompt +=
            length.value && !(length.value == "Medium")
                ? ` ${length.value}`
                : "n";
        prompt += " email";
        prompt += sender.value ? ` from ${sender.value}` : ""; // sender
        prompt += recipient.value ? ` to ${recipient.value}` : ""; // recepient
        prompt += purpose.value ? ` about ${purpose.value}` : ""; // purpose
        prompt += tone.value ? ` in a ${tone.value} tone` : ""; // tone
        prompt += ".";
        return prompt;
    }

    function getMaxTokenCount(length: string) {
        if (length == "Short") {
            return 200;
        } else if (length == "Medium") {
            return 500;
        } else if (length == "Long") {
            return 1000;
        } else {
            return 500;
        }
    }
    async function login(username: string, password: string) {
        console.log("Logging in...");
        let auth = JSON.stringify({
            username: username,
            password: password,
        });
        const response = await fetch(`http://localhost:3100/login`, {
            method: "POST",
            body: auth,
            headers: {
                "Content-Type": "application/json",
            },
        });

        return response.json().then((tok) => tok.token);
    }
    async function getCompletion(
        prompt: string,
        maxTokens = 10,
        temperature = 0.7
    ) {
        const response = await fetch(
            `http://localhost:3100/email-completion/?prompt=${prompt}&maxTokens=${maxTokens}&temperature=${temperature}`,
            {
                method: "GET",
                headers: {
                    Authorization: "Bearer: " + auth_header,
                    "Content-Type": "application/json",
                },
            }
        );
        return response;
    }
</script>

<!--CSS HERE -->

<style></style>
