---
import Clear_Button from "./Clear_Button.astro";
---

<div id="options_div">
    <div class="input_item">
        Who is the email being sent from: <br /><input
            type="text"
            id="sender_textinput"
        />
    </div>

    <div class="input_item">
        Who is the email being sent to: <br /><input
            type="text"
            id="recipient_textinput"
        />
    </div>

    <div class="input_item">
        What is the topic/purpose of the email: <br /><textarea
            id="purpose_textarea"></textarea>
    </div>

    <div class="input_item">
        <label>What should the approximate length be:</label>
        <select id="length_select">
            <option value="">Select a length</option>
            <option value="Short">Short</option>
            <option value="Medium">Medium</option>
            <option value="Long">Long</option>
        </select>
    </div>

    <div class="input_item">
        <label>What should the tone of the email be:</label>
        <select id="tone_select">
            <option value="">Select a tone</option>
            <option value="Friendly">Friendly</option>
            <option value="Professional">Professional</option>
            <option value="Conversational">Conversational</option>
        </select>
    </div>
    <div id="buttons_div">
        <button id="generate_button">Generate Email</button>
        <Clear_Button />
        <button id="editor_button">Edit Email</button>
    </div>
</div>

<script>
    import { getCompletion, login } from "../network"

    // get html elements
    const sender = document.querySelector(
        "#sender_textinput"
    ) as HTMLInputElement;
    const recipient = document.querySelector(
        "#recipient_textinput"
    ) as HTMLInputElement;
    const purpose = document.querySelector(
        "#purpose_textarea"
    ) as HTMLTextAreaElement;
    const length = document.querySelector(
        "#length_select"
    ) as HTMLSelectElement;
    const tone = document.querySelector("#tone_select") as HTMLSelectElement;
    const button = document.querySelector(
        "#generate_button"
    ) as HTMLButtonElement;
    const output = document.querySelector(
        "#Output_Field"
    ) as HTMLParagraphElement;
    const editor_button = document.querySelector(
        "#editor_button"
    ) as HTMLButtonElement;

    // max token counts for each length
    const maxTokenCounts = {
        Short: 200,
        Medium: 500,
        Long: 1000,
    };

    // global variable for auth header
    var auth_header: string;

    button.addEventListener("click", async function () {
        // the api is slow, so let the user know that the email is being generated
        output.textContent = "Generating...";

        // construct the prompt and get the max tokens
        let prompt = constructPrompt();
        let maxTokens = maxTokenCounts[length.value] || 500;

        // login to the api
        auth_header = await login("admin", "admin");

        // make a get request to the server
        let email = await getCompletion(prompt, maxTokens, .7, auth_header);
        let text = await email.text();
        console.log(text);
        // display the email
        output.textContent = text;
        //display the editor button
        editor_button.style.display = "inline-block";
    });

    function constructPrompt() {
        let prompt = "Write a";
        prompt +=
            length.value && !(length.value == "Medium")
                ? ` ${length.value}`
                : "n";
        prompt += " email";
        prompt += sender.value ? ` from ${sender.value}` : ""; // sender
        prompt += recipient.value ? ` to ${recipient.value}` : ""; // recepient
        prompt += purpose.value ? ` about ${purpose.value}` : ""; // purpose
        prompt += tone.value ? ` in a ${tone.value} tone` : ""; // tone
        prompt += ".";
        return prompt;
    }

    editor_button.addEventListener("click", function () {
        const editor = document.querySelector("#editor_div") as HTMLDivElement;
        toggle_display(editor);
    });
    function toggle_display(element: HTMLElement) {
        if (element.style.display == "none") {
            element.style.display = "block";
        } else {
            element.style.display = "none";
        }
    }
</script>
